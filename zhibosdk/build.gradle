apply plugin: 'com.android.library'

android {
    def gConfig = rootProject.extensions.getByName("ext")
    compileSdkVersion gConfig["compileSdkVersion"]
    buildToolsVersion gConfig["buildToolsVersion"]
    defaultConfig {
        minSdkVersion gConfig["minSdkVersion"]
        targetSdkVersion gConfig["targetSdkVersion"]
        versionCode gConfig["versionCode"]
        versionName gConfig["versionName"]
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        disable 'InvalidPackage'
        disable "ResourceType"
        abortOnError false
    }
}
repositories {
    flatDir {
        dirs 'libs'
    }
}
dependencies {
    def dataDependences = rootProject.ext.dataDependencies
    def sdksoupportDependencies = rootProject.ext.sdksoupportDependencies


    compile fileTree(include: ['*.jar'], dir: 'libs')


    compile sdksoupportDependencies.annotations

    // Retrofit + rx + gson
    compile dataDependences.retrofit
    compile dataDependences.retrofitConverterGson
    compile dataDependences.retorfitConverterScalar
    compile dataDependences.retrofitAdapterRxJava
    compile dataDependences.rxJava
    compile dataDependences.rxAndroid
    compile dataDependences.gson

    compile dataDependences.androideventbus
    compile dataDependences.okhttp3
    compile dataDependences.dagger
    annotationProcessor dataDependences.daggerCompiler
    provided dataDependences.javaxAnnotation
    compile project(':oldimsdk')

    compile 'com.qiniu:happy-dns:0.2.+'
    compile 'com.qiniu.pili:pili-android-qos:0.8.+'
}
buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven {
            url "https://jitpack.io"
        }
    }


}
task jarMyLib(type: Jar, dependsOn: ['build']) {
    archiveName = 'zhibosdk1.1.2-beta-nop.jar'
    from('build/intermediates/classes/release')
    from(project.zipTree("libs/imsdk1.1.5-beta.jar")) // 添加这一行

    from(project.zipTree("libs/pldroid-media-streaming-2.0.4.jar")) // 添加这一行

    from(project.zipTree("libs/pldroid-player-1.3.0.jar")) // 添加这一行

    destinationDir = file('build/libs')
    exclude('com/zhiyicx/imsdk/BuildConfig.class')
    exclude('com/zhiyicx/imsdk/BuildConfig\$*.class')
    exclude('**/R.class')
    exclude('**/R\$*.class')
//    include('com/nought/hellolib/*.class')
//    include('com/xxx/*.class') // 同时记得加上第三方的package
}
//def androidSDKDir = plugins.getPlugin('com.android.library').sdkHandler.getSdkFolder()
//def androidJarDir = androidSDKDir.toString() + '/platforms/' + "android-16" + '/android.jar'
//
//task proguardMyLib(type: proguard.gradle.ProGuardTask, dependsOn: ['jarMyLib']) {
//    injars('build/libs/zhibosdk1.1.2-beta-nop.jar')
//    outjars('build/libs/zhibosdk1.1.2-beta.jar')
//    libraryjars(androidJarDir)
//    configuration 'proguard-rules.pro'
//}
