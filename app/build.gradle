apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'
apply plugin: 'jacoco' //测试报告
apply from: "$rootDir/jacocoCoverage.gradle"
apply plugin: 'me.tatarka.retrolambda'
jacoco {
    toolVersion = "0.7.8"
    reportsDir = file("$buildDir/customJacocoReportDir")
}

android {
    def gConfig = rootProject.extensions.getByName("ext")
    compileSdkVersion gConfig["compileSdkVersion"]
    buildToolsVersion gConfig["buildToolsVersion"]
    defaultConfig {
        applicationId gConfig["applicationId"]
        minSdkVersion gConfig["minSdkVersion"]
        targetSdkVersion gConfig["targetSdkVersion"]
        versionCode gConfig["versionCode"]
        versionName gConfig["versionName"]
        testInstrumentationRunner gConfig.testDependencies.androidJUnitRunner

        ndk {
            //选择要添加的对应cpu类型的.so库。
            abiFilters 'armeabi', 'armeabi-v7a', 'armeabi-v8a', 'x86', 'x86_64', 'mips', 'mips64'
        }
        // 极光推送
        manifestPlaceholders = [
                JPUSH_PKGNAME: applicationId,
                JPUSH_APPKEY : "85f8e1049e913108b9d9bc67", //JPush上注册的包名对应的appkey.
                JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
        ]

        multiDexEnabled true
    }

    signingConfigs {
        release {
            storeFile file('../thinksnsplus.jks')
            storePassword 'thinksnsplus2017'
            keyAlias 'thinksnsplus'
            keyPassword 'thinksnsplus2017'
        }
        debug {
            storeFile file('../thinksnsplus.jks')
            storePassword 'thinksnsplus2017'
            keyAlias 'thinksnsplus'
            keyPassword 'thinksnsplus2017'
        }
    }

    buildTypes {

        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
            testCoverageEnabled false  // false 的时候 debug 才能看到成员变量的数据，true 用来导出代码覆盖率数据
        }
        release {
            minifyEnabled true
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }
    repositories {
        flatDir {
            dirs 'libs'
        }
    }
    /**
     * 保证 testDebug 执行完成后会执行 testRelease
     * ｛@Link http://g.co/androidstudio/not-mocked｝
     *
     */
    testOptions {
        unitTests.all {
            // All the usual Gradle options.
            jvmArgs '-XX:MaxPermSize=256m'
            // resolve "Method ... not mocked."
            jacoco {
                includeNoLocationClasses = true
            }
        }
        unitTests.returnDefaultValues = true

    }

    lintOptions {
        quiet true
        abortOnError false
        ignoreWarnings true
        abortOnError false
        disable "ResourceType"
        disable 'InvalidPackage'            //Some libraries have issues with this.
        disable 'OldTargetApi'
        //Lint gives this warning but SDK 20 would be Android L Beta.
        disable 'IconDensities'             //For testing purpose. This is safe to remove.
        disable 'IconMissingDensityFolder'  //For testing purpose. This is safe to remove.
        // if true, only report errors.
        ignoreWarnings true
        lintConfig file("lint.xml")
    }
    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }
    dexOptions {
        dexInProcess true
        preDexLibraries true
        javaMaxHeapSize "6g"//越大越好
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}
greendao {
    /**
     * daoPackage 生成的DAO，DaoMaster和DaoSession的包名。默认是实体的包名。
     * targetGenDir 生成源文件的路径。默认源文件目录是在build目录中的(build/generated/source/greendao)。
     * generateTests 设置是否自动生成单元测试。
     * targetGenDirTest 生成的单元测试的根目录。
     */
    schemaVersion 73
    daoPackage 'com.zhiyicx.thinksnsplus.data.beans'
    generateTests true
    //targetGenDir 'src/main/java'
}
buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'me.tatarka:gradle-retrolambda:3.6.1'
    }
}
configurations.all {
    resolutionStrategy {
        force 'com.android.support:support-annotations:25.0.1'
        force 'com.google.code.findbugs:jsr305:1.3.9'
    }
}
dependencies {
    def dataDependences = rootProject.ext.dataDependencies;
    def supportDependences = rootProject.ext.sdksoupportDependencies;
    def testDependences = rootProject.ext.testDependencies;

    compile fileTree(dir: 'libs', include: ['*.jar'])
    //support
    compile supportDependences.appcompatV7
    compile supportDependences.paletteV7
    compile supportDependences.supportV4
    compile supportDependences.constraintLayout

    // Test
    testCompile testDependences.junit
    androidTestCompile(testDependences.espresso) {
        exclude module: 'support-annotations'
        exclude group: 'javax.inject'
    }
    androidTestCompile testDependences.espressoIntent
    androidTestCompile(testDependences.espressoRecyclerView) {
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'design'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude module: 'recyclerview-v7'
    }
    testCompile testDependences.runner
    testCompile testDependences.robolectric
    testCompile testDependences.mockito
    annotationProcessor dataDependences.daggerCompiler
    // Dagger dependencies
    compile dataDependences.dagger
    provided dataDependences.javaxAnnotation
    provided dataDependences.daggerCompiler
    annotationProcessor dataDependences.daggerCompiler
    // Butterknife
    compile dataDependences.butterknife
    annotationProcessor dataDependences.butterknifeApt
    // Project
    compile project(":baseproject")
    compile project(":media-cache")
    compile project(':banner')
    compile project(':tspay')
    compile project(':contacts')
    compile project(':appupdate')
    compile project(':bigimage')
    // database
    compile dataDependences.greendao
    compile dataDependences.guava
    // jpush
    compile dataDependences.jiguangJpush
    compile dataDependences.jiguangJcore

    compile dataDependences.greendaoSqlcipher
    compile dataDependences.markdownView
    compile dataDependences.editor
    compile dataDependences.richtext
    compile(name: 'lint-library-release', ext: 'aar')

    compile dataDependences.flowlayout
//    compile dataDependences.contacts

    compile dataDependences.update
}

